---
title: "<span style='font-size:1.2em; font-weight: 600'>Data</span> <br><span style='font-size:1.2em; font-weight: 600'> Visualization</span> <br> <span style='font-size:1.0em; font-weight: 400'>with R</span>"
subtitle: "<br><span style='color:#525252; font-size:1.3em;'>-- July 2025</span>"
format: 
   revealjs:
     transition: fade
     theme: theme/slides-theme.scss
     css: theme/style.css
     footer: '[Roger Beecham](https://roger-beecham.com)'
     mainfont: Avenir Book
---


```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
library(knitr)
library(kableExtra)
library(tidyverse)
```

---

# Session 7 : Recap and consolidate  


---


::: {style="font-size: 140%;"}

::: {.callout-important icon=false}

## Schedule


* 1415 -- 1515 : Concepts

* 1515 -- 1530 : Break + set-up (tech)  

* 1530 -- 1645 : Live coding explanation

* 1645 -- 1700 : Break + prep questions

* 1700 -- 1730 : Questions / independent reflection

* 1730 -- 1745 : Recap + looking ahead


:::

:::

---

<br>

Part 1 <br> 
<span style='font-size:1.2em; font-weight: 600'>
*Grammar of interactive data analysis*
</span>

<br>

Part 2 <br> 
<span style='font-size:1.2em; font-weight: 600'>
*Exploratory analysis as model-driven process*
</span>

<br>

Part 3 <br> 
<span style='font-size:1.2em; font-weight: 600'>
*Visual methods for discouraging false discovery*
</span>

---

# Part 1 : *Grammar of interactive data analysis* 

---


---

## RQ1 : Do different customer categories in the Citibike scheme cycle differently? 

:::{.fragment}
```{r}
#| echo: false
#| out-width: 80%
include_graphics("img/hod_dow.png", error = FALSE)
```
:::

---

## RQ1 

### Condition data

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
ny_temporal <- ny_trips |>
  mutate(
    day=wday(start_time, label=TRUE),
    hour=hour(start_time)) |> 
  group_by(user_type, day, hour) |>
  summarise(count=n()) |>
  ungroup()
```

</div>

:::

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
> ny_temporal
# A tibble: 336 × 4
   user_type day    hour count
   <chr>     <ord> <int> <int>
 1 Customer  Sun       0   341
 2 Customer  Sun       1   284
 3 Customer  Sun       2   118
 4 Customer  Sun       3    59
 5 Customer  Sun       4    42
 6 Customer  Sun       5    57
 7 Customer  Sun       6   103
 8 Customer  Sun       7   173
 9 Customer  Sun       8   387
10 Customer  Sun       9   743
# ℹ 326 more rows
# ℹ Use `print(n = ...)` to see more rows
```

</div>

:::

:::

---

## RQ1

### Reshape data for comparison 

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
ny_temporal |>
  group_by(user_type) |>
  mutate(user_count=sum(count)) |>
  group_by(user_type, day) |>
  summarise(
    count=sum(count), 
    user_count=first(user_count), 
    prop=count/user_count) |>
  select(user_type, day, prop) |>
  pivot_wider(
    names_from=user_type, 
    values_from=prop
  )
```

</div>

:::

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
# A tibble: 7 × 3
  day   Customer Subscriber
  <ord>    <dbl>      <dbl>
1 Sun     0.198       0.144
2 Mon     0.137       0.163
3 Tue     0.144       0.172
4 Wed     0.104       0.125
5 Thu     0.0973      0.122
6 Fri     0.135       0.138
7 Sat     0.185       0.136
```

</div>

:::

:::

---

## RQ1

### Plot data for data-rich comparison

<br>

:::{.columns}

::: {.column width="40%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
ny_temporal |>
  ggplot(aes(
    x=hour, y=count, 
    group=user_type,
    colour=user_type)) +
  geom_line(linewidth=1.1) +
  scale_colour_manual(values=c("#e31a1c", "#1f78b4")) +
  facet_wrap(~day, nrow=1)+
  labs(x="", y="trip counts")
```

</div>

:::

::: {.column width="60%"}


```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/hod_dow.png", error = FALSE)
```

:::

:::
---



## RQ1 

### Reuse template for different conditioning

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "5,8,9"
ny_trips |>
  mutate(
    day=wday(start_time, label=TRUE),
    hour=hour(start_time)) |> 
  group_by(gender, day, hour) |>
  summarise(count=n()) |>
  ungroup() |> 
  ggplot(aes(x=hour, y=count, group=gender)) +
  geom_line(aes(colour=gender), linewidth=1.1) +
  scale_colour_manual(values=c("#e31a1c", "#1f78b4")) +
  facet_wrap(~day, nrow=1)+
  labs(x="", y="trip counts")
```

</div>

:::

::: {.column width="50%"}


```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/hod_dow_gender.png", error = FALSE)
```

:::

:::

---

## RQ1

### Exploit layers for additional comparison

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "10,11,12,13"
ny_trips |>
  mutate(
    day=wday(start_time, label=TRUE),
    hour=hour(start_time)) |> 
  group_by(user_type, day, hour) |>
  summarise(count=n()) |>
  ungroup() |> 
  ggplot(aes(x=hour, y=count, group=user_type, colour=user_type)) +
  geom_line(linewidth=1.1) +
  geom_line(
    data=. %>% group_by(user_type, day) %>% 
    mutate(count=mean(count)), linewidth=.4
    ) +
  scale_colour_manual(values=c("#e31a1c", "#1f78b4")) +
  facet_wrap(~day, nrow=1)+
  labs(x="", y="trip counts")
```

</div>

:::

::: {.column width="50%"}


```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/hod_dow_user_comp.png", error = FALSE)
```

:::

:::


---

## RQ1

### Rearrange plot "grammar" for alternative comparison

<br>

```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/hod_emph_user.png", error = FALSE)
```

---

## RQ1

### Rearrange plot "grammar" for alternative comparison

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "8,11,15"
ny_trips |>
  mutate(
    day=wday(start_time, label=TRUE),
    hour=hour(start_time)) |> 
  group_by(user_type, day, hour) |>
  summarise(count=n()) |>
  ungroup() |> 
  ggplot(aes(x=day, y=count, group=user_type, colour=user_type)) +
  geom_line(linewidth=1.1) +
  geom_line(
    data=. %>% group_by(user_type, day) %>% mutate(count=mean(count)),
    linewidth=.4
    ) +
  scale_colour_manual(values=c("#e31a1c", "#1f78b4")) +
  facet_wrap(~hour, nrow=1)+
  labs(x="", y="trip counts")
```

</div>

:::

::: {.column width="50%"}


```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/hod_emph_user.png", error = FALSE)
```

:::

:::

---


## RQ1 

### Add label for clarity

```{r}
#| out.width: 80%
#| echo: false

include_graphics("img/hod_emph_user_label.png", error = FALSE)
include_graphics("img/hod_emph_user.png", error = FALSE)
```


---


## RQ1 

### Add label for clarity

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "17,18,19,20,21,22,23,24"
ny_trips |>
  mutate(
    day=wday(start_time, label=TRUE),
    hour=hour(start_time)
    ) |> 
  filter(!hour %in% c(0:5)) |> 
  group_by(user_type, day, hour) |>
  summarise(count=n()) |>
  ungroup() |> 
  ggplot(aes(x=day, y=count, colour=user_type)) +
  geom_point() +
  geom_line(aes(group=user_type), linewidth=.7) +
  geom_line(aes(group=user_type),
    data=. %>% group_by(user_type, hour) %>% mutate(count=mean(count)),
    linewidth=.4
    ) +
  geom_text(
    data = . %>% 
      filter(
        user_type=="Subscriber", day %in% c("Sun", "Tue", "Thu", "Sat"),
        hour %in% c(8, 11, 14, 17, 20)
        ),
      aes(label=str_sub(day,1,1), y=0), vjust=0, colour="#000000", size=2.5
    ) +
  scale_colour_manual(values=c("#e31a1c", "#1f78b4")) +
  facet_wrap(~hour, nrow=1)+
  labs(x="", y="trip counts")
```

</div>

:::

::: {.column width="50%"}


```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/hod_emph_user_label.png", error = FALSE)
include_graphics("img/hod_emph_user.png", error = FALSE)
```

:::

:::


---

## RQ2 : How did 2019 General Election shift Conservative? 

---

## RQ2

### Plot association

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
data_gb |>
  mutate(winner_19=case_when(
           winner_19 == "Conservative" ~ "Conservative",
           winner_19 == "Labour" ~ "Labour",
           TRUE ~ "Other"
         )) |> 
  ggplot(aes(x=con_17, y=con_19)) +
  geom_point(aes(colour=winner_19)) +
  geom_abline(intercept = 0, slope = 1) +
  scale_colour_manual(values=c(con,lab,other)) +
  labs(
     y="Conservative 2019 vote share", 
     x="Conservative 2017 vote share"
  )

```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/scatters_con_basic.png", error = FALSE)
```

:::

:::

---

## RQ2

### Exploit encoding for additional comparison

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "8,9, 12,16"
data_gb |>
  mutate(
    winner_19=case_when(
           winner_19 == "Conservative" ~ "Conservative",
           winner_19 == "Labour" ~ "Labour",
           TRUE ~ "Other"
         ),
    is_flipped=seat_change_1719 %in% 
       c("Conservative gain from Labour","Labour gain from Conservative")
    ) |>
  ggplot(aes(x=con_17, y=con_19)) +
  geom_point(aes(colour=winner_19, fill=winner_19, alpha=is_flipped), pch=21) +
  geom_abline(intercept = 0, slope = 1) +
  scale_colour_manual(values=c(con,lab,other)) +
  scale_fill_manual(values=c(con,lab,other)) +
  scale_alpha_ordinal(range=c(.3,.9)) +
  labs(
    y="Conservative 2019 vote share", 
    x="Conservative 2017 vote share"
  )

```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/scatters_con_alpha.png", error = FALSE)
```

:::

:::

---


## RQ2

### Exploit encoding for additional comparison

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "10,14"
data_gb |>
  mutate(winner_19=case_when(
           winner_19 == "Conservative" ~ "Conservative",
           winner_19 == "Labour" ~ "Labour",
           TRUE ~ "Other"
         ),
         is_flipped=seat_change_1719 %in% 
       c("Conservative gain from Labour","Labour gain from Conservative")) |>
  ggplot(aes(x=con_17, y=con_19)) +
  geom_point(aes(colour=winner_19, shape=is_flipped, alpha=is_flipped)) +
  geom_abline(intercept = 0, slope = 1) +
  scale_colour_manual(values=c(con,lab,other)) +
  scale_alpha_ordinal(range=c(.5,1)) +
  scale_shape_manual(values=c(21,19)) +
  labs(
    y="Conservative 2019 vote share", 
    x="Conservative 2017 vote share"
  )
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/scatters_con_shape.png", error = FALSE)
```

:::

:::

---


## RQ2

### Edit plot "grammar" for comparison

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "9,11"
data_gb |>
  mutate(winner_19=case_when(
           winner_19 == "Conservative" ~ "Conservative",
           winner_19 == "Labour" ~ "Labour",
           TRUE ~ "Other"
         ),
         is_flipped=seat_change_1719 %in% 
       c("Conservative gain from Labour","Labour gain from Conservative")) |>
  ggplot(aes(x=leave_hanretty, y=con_19)) +
  geom_point(aes(colour=winner_19, shape=is_flipped, alpha=is_flipped)) +
  geom_vline(xintercept=50) +
  scale_colour_manual(values=c(con,lab,other)) +
  scale_alpha_ordinal(range=c(.5,1)) +
  scale_shape_manual(values=c(21,19)) +
  labs(y="Conservative 2019 vote share", x="Leave")
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/scatters_con_leave.png", error = FALSE)
```

:::

:::

---

## RQ2

### Add label for exploration

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "12,13,14,15"
data_gb |>
  mutate(winner_19=case_when(
           winner_19 == "Conservative" ~ "Conservative",
           winner_19 == "Labour" ~ "Labour",
           TRUE ~ "Other"
         ),
         is_flipped=seat_change_1719 %in% 
       c("Conservative gain from Labour","Labour gain from Conservative")) |>
  ggplot(aes(x=leave_hanretty, y=con_19)) +
  geom_point(aes(colour=winner_19, shape=is_flipped, alpha=is_flipped)) +
  geom_vline(xintercept=50) +
  geom_text(
    data=. %>% filter(leave_hanretty<50, is_flipped),
    aes(label=constituency_name), size=3, nudge_y=3
    )+
  scale_colour_manual(values=c(con,lab,other)) +
  scale_alpha_ordinal(range=c(.5,1)) +
  scale_shape_manual(values=c(21,19)) +
  labs(y="Conservative 2019 vote share", x="Leave")
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/scatters_con_leave_ann.png", error = FALSE)
```

:::

:::
---

## RQ2

### Compose views for comparison

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
library(patchwork)
change_plot / leave_plot
```

</div>

:::

::: {.column width="40%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/scatters_patchwork.png", error = FALSE)
```

:::

:::
---




# Part 2 : *Exploratory visual data analysis as model-driven process*


---

## RQ1 : Where do professional and non-professional workers commute in London? 

---

## RQ1 


<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
library(ggtext)

nodes |> 
  filter(type=="jobs") |> 
  mutate(la=factor(la, levels=bor_orders)) |> 
  group_by(la, is_prof) |> 
  summarise(count=sum(count)) |> 
  ggplot(aes(x=la, y=count)) + 
  geom_col(data=. %>% filter(is_prof), fill="#e41a1c", alpha=.7) +
  geom_col(data=. %>% filter(!is_prof), fill="#377eb8", alpha=.7) +
  scale_y_continuous(
     breaks=c(0:4*100000), 
     labels = scales::comma_format(scale = .001)
     ) +
  labs(
    x="", 
    y="job count in hundred thousands",  
    subtitle="<span style = 'color: #377eb8;'>not-prof</span> | <span style = 'color: #e41a1c;'>prof</span> "
    )+
  theme(
    axis.text.x = element_text(angle=-90, hjust=0), 
    plot.subtitle = element_markdown(size=15)
    )
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/jobs_type_bor.png", error = FALSE)
```

:::

:::

---

## RQ1 


<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "5,6,7,8"
library(ggtext)

nodes |> 
  filter(type=="jobs") |> 
  mutate(la=factor(la, levels=bor_orders)) |> 
  group_by(la, is_prof) |> 
  summarise(count=sum(count)) |> 
  ggplot(aes(x=la, y=count)) + 
  geom_col(data=. %>% filter(is_prof), fill="#e41a1c", alpha=.7) +
  geom_col(data=. %>% filter(!is_prof), fill="#377eb8", alpha=.7) +
  scale_y_continuous(
     breaks=c(0:4*100000), 
     labels = scales::comma_format(scale = .001)
     ) +
  labs(
    x="", 
    y="job count in hundred thousands",  
    subtitle="<span style = 'color: #377eb8;'>not-prof</span> | <span style = 'color: #e41a1c;'>prof</span> "
    )+
  theme(
    axis.text.x = element_text(angle=-90, hjust=0), 
    plot.subtitle = element_markdown(size=15)
    )
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/jobs_type_bor.png", error = FALSE)
```

:::

:::

---

## RQ1 


<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "9,10"
library(ggtext)

nodes |> 
  filter(type=="jobs") |> 
  mutate(la=factor(la, levels=bor_orders)) |> 
  group_by(la, is_prof) |> 
  summarise(count=sum(count)) |> 
  ggplot(aes(x=la, y=count)) + 
  geom_col(data=. %>% filter(is_prof), fill="#e41a1c", alpha=.7) +
  geom_col(data=. %>% filter(!is_prof), fill="#377eb8", alpha=.7) +
  scale_y_continuous(
     breaks=c(0:4*100000), 
     labels = scales::comma_format(scale = .001)
     ) +
  labs(
    x="", 
    y="job count in hundred thousands",  
    subtitle="<span style = 'color: #377eb8;'>not-prof</span> | <span style = 'color: #e41a1c;'>prof</span> "
    )+
  theme(
    axis.text.x = element_text(angle=-90, hjust=0), 
    plot.subtitle = element_markdown(size=15)
    )
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/jobs_type_bor.png", error = FALSE)
```

:::

:::

---

## RQ1 


<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "1,18,19,24"
library(ggtext)

nodes |> 
  filter(type=="jobs") |> 
  mutate(la=factor(la, levels=bor_orders)) |> 
  group_by(la, is_prof) |> 
  summarise(count=sum(count)) |> 
  ggplot(aes(x=la, y=count)) + 
  geom_col(data=. %>% filter(is_prof), fill="#e41a1c", alpha=.7) +
  geom_col(data=. %>% filter(!is_prof), fill="#377eb8", alpha=.7) +
  scale_y_continuous(
     breaks=c(0:4*100000), 
     labels = scales::comma_format(scale = .001)
     ) +
  labs(
    x="", 
    y="job count in hundred thousands",  
    subtitle="<span style = 'color: #377eb8;'>not-prof</span> | <span style = 'color: #e41a1c;'>prof</span> "
    )+
  theme(
    axis.text.x = element_text(angle=-90, hjust=0), 
    plot.subtitle = element_markdown(size=15)
    )
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/jobs_type_bor.png", error = FALSE)
```

:::

:::

---

## RQ1 


<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "11,12,13,14"
library(ggtext)

nodes |> 
  filter(type=="jobs") |> 
  mutate(la=factor(la, levels=bor_orders)) |> 
  group_by(la, is_prof) |> 
  summarise(count=sum(count)) |> 
  ggplot(aes(x=la, y=count)) + 
  geom_col(data=. %>% filter(is_prof), fill="#e41a1c", alpha=.7) +
  geom_col(data=. %>% filter(!is_prof), fill="#377eb8", alpha=.7) +
  scale_y_continuous(
     breaks=c(0:4*100000), 
     labels = scales::comma_format(scale = .001)
     ) +
  labs(
    x="", 
    y="job count in hundred thousands",  
    subtitle="<span style = 'color: #377eb8;'>not-prof</span> | <span style = 'color: #e41a1c;'>prof</span> "
    )+
  theme(
    axis.text.x = element_text(angle=-90, hjust=0), 
    plot.subtitle = element_markdown(size=15)
    )
```

</div>

:::

::: {.column width="50%"}



```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/jobs_type_bor.png", error = FALSE)
```

:::

:::


---


## RQ1 : 

#### 51% of jobs are professional, so there <u>must be</u> a distinctive geography

::: {.column width="80%"}

```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/jobs_type_bor.png", error = FALSE)
```

:::

---

## RQ1 : 

#### Our model 1

##### Randomly select commute <br> <u>expect</u> 51% to be professional

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
edges |> 
  mutate( 
    global_prof = sum(prof) / sum(prof + non_prof),
    count = prof + non_prof,
    obs = prof,
    exp = (global_prof * count),
    resid = (obs - exp) / (exp^.7)
  )
```

</div>

:::

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
# A tibble: 1,089 × 6
   o_bor                d_bor                global_prof   obs    exp  resid
   <chr>                <chr>                      <dbl> <dbl>  <dbl>  <dbl>
 1 Barking and Dagenham Barking and Dagenham       0.513  3202 7514.  -8.35 
 2 Barking and Dagenham Barnet                     0.513   110  144.  -1.04 
 3 Barking and Dagenham Bexley                     0.513    41   79.5 -1.80 
 4 Barking and Dagenham Brent                      0.513   118  149.  -0.927
 5 Barking and Dagenham Bromley                    0.513    36   53.3 -1.07 
 6 Barking and Dagenham Camden                     0.513   781  951.  -1.40 
 7 Barking and Dagenham City of London             0.513  1122 1447.  -2.00 
 8 Barking and Dagenham Croydon                    0.513    30   56.4 -1.57 
 9 Barking and Dagenham Ealing                     0.513    94  128.  -1.15 
10 Barking and Dagenham Enfield                    0.513   221  335.  -1.95
```

</div>

:::

:::


---

## RQ1 : 

#### Our model 1  

##### Randomly select commute <br> <u>expect</u> 51% to be <br>professional

<br>

:::{.columns}

::: {.column width="40%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
edges |> 
  mutate( 
    global_prof = sum(prof) / sum(prof + non_prof),
    count = prof + non_prof,
    obs = prof,
    exp = (global_prof * count),
    resid = (obs - exp) / (exp^.7)
  )
```

</div>

:::

::: {.column width="60%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false
include_graphics("img/od_map_model.png", error = FALSE)
```


![](img/od_map_model.png){.absolute top=100 left=450 width="60%"}

:::

:::


---

## RQ1 : 

#### Our model 2

##### Randomly select commute <br> *expect* % professional <br> ~ destination



:::{.columns}

::: {.column width="40%"}

<br>

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "4,6"
edges |> 
  group_by(d_bor) |> 
  mutate(
    local_prof = sum(prof) / sum(prof + non_prof),
    count = prof + non_prof,
    obs = prof,
    exp = (local_prof * count),
    resid = (obs - exp) / (exp^.7)
  )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```

![](img/od_map_model2.png){.absolute top=100 left=450 width="60%"}
:::

:::


---

## RQ1 : 

#### Our model 2

##### Randomly select commute <br> <u>expect</u> % professional <br> ~ destination



:::{.columns}

::: {.column width="50%"}


<div style="font-size:0.4em;"> 

```{r}
#| eval: false
#| echo: true
plot_data |>
  ggplot() +
  geom_sf(aes(fill=resid), colour = "#ffffff", size = 0.15, alpha = 0.9) +
  geom_sf(
    data = . %>% filter(bor_focus),
    fill = "transparent", colour = "#373737", size = 0.3
    ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = o_x, y = o_y, label = str_extract(o_bor, "^.{1}")),
    colour = "#252525", alpha = 0.9, size = 2.1,
    hjust = "centre", vjust = "middle"
  ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = bbox_grid$xmax, y = bbox_grid$ymin, label = abbreviate(o_bor, 3)),
    colour = "#252525", alpha = 0.9, size = 3.5,
    hjust = "right", vjust = "bottom"
  ) +
  coord_sf(crs = st_crs(plot_data), datum = NA) +
  facet_grid(-d_row ~ d_col, shrink = FALSE) +
  scale_fill_distiller(palette = "RdBu", direction = -1 )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```

![](img/od_map_model2.png){.absolute top=180 left=530 width="54%"}

:::

:::


---

## RQ1 : 

#### Our model 2

##### Randomly select commute <br> <u>expect</u> % professional <br> ~ destination



:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.4em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "3"
plot_data |>
  ggplot() +
  geom_sf(aes(fill=resid), colour = "#ffffff", size = 0.15, alpha = 0.9) +
  geom_sf(
    data = . %>% filter(bor_focus),
    fill = "transparent", colour = "#373737", size = 0.3
    ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = o_x, y = o_y, label = str_extract(o_bor, "^.{1}")),
    colour = "#252525", alpha = 0.9, size = 2.1,
    hjust = "centre", vjust = "middle"
  ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = bbox_grid$xmax, y = bbox_grid$ymin, label = abbreviate(o_bor, 3)),
    colour = "#252525", alpha = 0.9, size = 3.5,
    hjust = "right", vjust = "bottom"
  ) +
  coord_sf(crs = st_crs(plot_data), datum = NA) +
  facet_grid(-d_row ~ d_col, shrink = FALSE) +
  scale_fill_distiller(palette = "RdBu", direction = -1 )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```

![](img/od_map_model2.png){.absolute top=180 left=530 width="54%"}

:::

:::


---


## RQ1 : 

#### Our model 2

##### Randomly select commute <br> <u>expect</u> % professional <br> ~ destination



:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.4em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "4,5,6,7"
plot_data |>
  ggplot() +
  geom_sf(aes(fill=resid), colour = "#ffffff", size = 0.15, alpha = 0.9) +
  geom_sf(
    data = . %>% filter(bor_focus),
    fill = "transparent", colour = "#373737", size = 0.3
    ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = o_x, y = o_y, label = str_extract(o_bor, "^.{1}")),
    colour = "#252525", alpha = 0.9, size = 2.1,
    hjust = "centre", vjust = "middle"
  ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = bbox_grid$xmax, y = bbox_grid$ymin, label = abbreviate(o_bor, 3)),
    colour = "#252525", alpha = 0.9, size = 3.5,
    hjust = "right", vjust = "bottom"
  ) +
  coord_sf(crs = st_crs(plot_data), datum = NA) +
  facet_grid(-d_row ~ d_col, shrink = FALSE) +
  scale_fill_distiller(palette = "RdBu", direction = -1 )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```

![](img/od_map_model2.png){.absolute top=180 left=530 width="54%"}

:::

:::


---

## RQ1 : 

#### Our model 2

##### Randomly select commute <br> <u>expect</u> % professional <br> ~ destination


:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.4em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "8,9,10,11,12,13"
plot_data |>
  ggplot() +
  geom_sf(aes(fill=resid), colour = "#ffffff", size = 0.15, alpha = 0.9) +
  geom_sf(
    data = . %>% filter(bor_focus),
    fill = "transparent", colour = "#373737", size = 0.3
    ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = o_x, y = o_y, label = str_extract(o_bor, "^.{1}")),
    colour = "#252525", alpha = 0.9, size = 2.1,
    hjust = "centre", vjust = "middle"
  ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = bbox_grid$xmax, y = bbox_grid$ymin, label = abbreviate(o_bor, 3)),
    colour = "#252525", alpha = 0.9, size = 3.5,
    hjust = "right", vjust = "bottom"
  ) +
  coord_sf(crs = st_crs(plot_data), datum = NA) +
  facet_grid(-d_row ~ d_col, shrink = FALSE) +
  scale_fill_distiller(palette = "RdBu", direction = -1 )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```


![](img/od_map_model2.png){.absolute top=180 left=530 width="54%"}

:::

:::


---

## RQ1 : 

#### Our model 2

##### Randomly select commute <br> <u>expect</u> % professional <br> ~ destination


:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.4em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "14,15,16,17,18,19"
plot_data |>
  ggplot() +
  geom_sf(aes(fill=resid), colour = "#ffffff", size = 0.15, alpha = 0.9) +
  geom_sf(
    data = . %>% filter(bor_focus),
    fill = "transparent", colour = "#373737", size = 0.3
    ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = o_x, y = o_y, label = str_extract(o_bor, "^.{1}")),
    colour = "#252525", alpha = 0.9, size = 2.1,
    hjust = "centre", vjust = "middle"
  ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = bbox_grid$xmax, y = bbox_grid$ymin, label = abbreviate(o_bor, 3)),
    colour = "#252525", alpha = 0.9, size = 3.5,
    hjust = "right", vjust = "bottom"
  ) +
  coord_sf(crs = st_crs(plot_data), datum = NA) +
  facet_grid(-d_row ~ d_col, shrink = FALSE) +
  scale_fill_distiller(palette = "RdBu", direction = -1 )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```

![](img/od_map_model2.png){.absolute top=180 left=530 width="54%"}

:::

:::


---

## RQ1 : 

#### Our model 2

##### Randomly select commute <br> <u>expect</u> % professional <br> ~ destination




:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.4em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "20,21"
plot_data |>
  ggplot() +
  geom_sf(aes(fill=resid), colour = "#ffffff", size = 0.15, alpha = 0.9) +
  geom_sf(
    data = . %>% filter(bor_focus),
    fill = "transparent", colour = "#373737", size = 0.3
    ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = o_x, y = o_y, label = str_extract(o_bor, "^.{1}")),
    colour = "#252525", alpha = 0.9, size = 2.1,
    hjust = "centre", vjust = "middle"
  ) +
  geom_text(
    data = plot_data %>% filter(bor_focus),
    aes(x = bbox_grid$xmax, y = bbox_grid$ymin, label = abbreviate(o_bor, 3)),
    colour = "#252525", alpha = 0.9, size = 3.5,
    hjust = "right", vjust = "bottom"
  ) +
  coord_sf(crs = st_crs(plot_data), datum = NA) +
  facet_grid(-d_row ~ d_col, shrink = FALSE) +
  scale_fill_distiller(palette = "RdBu", direction = -1 )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
#| include: false

include_graphics("img/od_map_model2.png", error = FALSE)
```

![](img/od_map_model2.png){.absolute top=180 left=530 width="54%"}

:::

:::


---


# Part 3 : *Visual methods for discouraging false discovery*


---


::: {.column width="90%"}

```{r}
#| out.width: 100%
#| echo: false

include_graphics("img/lineups_hex_annotate.png", error = FALSE)
```

:::

---

## RQ : Are our residuals spatially strucured? How and why?

---

## RQ

### Lineup as informal test statistic

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
model <- cons_data |> 
  select(-c(population, population_density)) |>
  mutate(
    across(
      c(younger:heavy_industry),
      ~(.x-mean(.x))/sd(.x)),
    type="full_dataset", region=as.factor(region)
    ) |>
  nest(data=-type) |>
  mutate(
    # Include `-1` to eliminate the constant term and include a dummy for every area
    model=map(data,
      ~lm(
        leave ~ 
          region +  degree  + eu_born + white  + no_car + not_good_health + heavy_industry -1, data=.x
        )
      ),
    # augment() for predictions / residuals
    values=map(model, augment)
  )
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
include_graphics("img/lineups_hex_annotate.png", error = FALSE)
```

:::

:::

---

## RQ

### Lineup as informal test statistic

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.5em;"> 

```{r}
#| eval: false
#| echo: true
permuted_data <- model |>
  mutate(
    resids=map(values, ~.x |>  select(.resid))
  ) |>
  select(-c(model, values)) |>
  unnest(cols=c(data,resids)) |>
  select(pcon19cd, .resid) |>
  permutations(
    permute=c(pcon19cd), times=8, apparent=TRUE
    ) |>
  mutate(data=map(splits, ~rsample::analysis(.))) |>
  select(id, data) |>
  unnest(cols=data)
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
include_graphics("img/lineups_hex_annotate.png", error = FALSE)
```

:::

:::

---

## RQ

### Lineup as informal test statistic

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.45em;"> 

```{r}
#| eval: false
#| echo: true
max_resid <- max(abs(permuted_data$.resid))
ids <- permuted_data |> pull(id) |> unique()

cons_hex |>
  select(cons_code, region) |>
  inner_join(
    permuted_data, 
    by=c("cons_code"="pcon19cd")
    ) |>
  mutate(id=factor(id, levels=sample(ids))) |>
  ggplot() +
  geom_sf(aes(fill=.resid), colour="#636363", linewidth=0.05)+
  geom_sf(
    data=. %>% group_by(region) %>% summarise(),
    colour="#636363", linewidth=0.2, fill="transparent"
    )+
  facet_wrap(~id, ncol=3) +
  scale_fill_distiller(palette="RdBu", direction=1,
                       limits=c(-max_resid, max_resid), guide="none")
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
include_graphics("img/lineups_hex_annotate.png", error = FALSE)
```

:::

:::


---

## RQ

### Lineup as informal test statistic

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.45em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "1,12,18,19"
max_resid <- max(abs(permuted_data$.resid))
ids <- permuted_data |> pull(id) |> unique()

cons_hex |>
  select(cons_code, region) |>
  inner_join(
    permuted_data, 
    by=c("cons_code"="pcon19cd")
    ) |>
  mutate(id=factor(id, levels=sample(ids))) |>
  ggplot() +
  geom_sf(aes(fill=.resid), colour="#636363", linewidth=0.05)+
  geom_sf(
    data=. %>% group_by(region) %>% summarise(),
    colour="#636363", linewidth=0.2, fill="transparent"
    )+
  facet_wrap(~id, ncol=3) +
  scale_fill_distiller(palette="RdBu", direction=1,
                       limits=c(-max_resid, max_resid), guide="none")
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
include_graphics("img/lineups_hex_annotate.png", error = FALSE)
```

:::

:::


---

## RQ

### Lineup as informal test statistic

<br>

:::{.columns}

::: {.column width="50%"}

<div style="font-size:0.45em;"> 

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "2,10,17"
max_resid <- max(abs(permuted_data$.resid))
ids <- permuted_data |> pull(id) |> unique()

cons_hex |>
  select(cons_code, region) |>
  inner_join(
    permuted_data, 
    by=c("cons_code"="pcon19cd")
    ) |>
  mutate(id=factor(id, levels=sample(ids))) |>
  ggplot() +
  geom_sf(aes(fill=.resid), colour="#636363", linewidth=0.05)+
  geom_sf(
    data=. %>% group_by(region) %>% summarise(),
    colour="#636363", linewidth=0.2, fill="transparent"
    )+
  facet_wrap(~id, ncol=3) +
  scale_fill_distiller(palette="RdBu", direction=1,
                       limits=c(-max_resid, max_resid), guide="none")
```
```

</div>

:::

::: {.column width="50%"}

```{r}
#| out.width: 100%
#| echo: false
include_graphics("img/lineups_hex_annotate.png", error = FALSE)
```

:::

:::